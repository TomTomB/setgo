name: Checks

on:
  pull_request:
    paths-ignore:
      - '**.md'

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:
  setup:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        node-version: [14.x]
        operating-system: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Setup node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build version file
        run: yarn build:version

      - name: Check format
        run: yarn format:check --base=origin/main

      - name: Lint
        run: yarn affected:lint --base=origin/main

      - name: Build all apps
        run: yarn affected:build --all

      - name: Test
        uses: w9jds/firebase-action@master
        with:
          args: emulators:exec 'yarn test --project firebase'
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Deploy preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          expires: 30d
          projectId: set-go-backend
