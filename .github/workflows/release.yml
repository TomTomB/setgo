name: Release
on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: setgo
  REGION: europe-west1

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: docker://ghcr.io/codfish/semantic-release-action:v1
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Cloud SDK
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        if: steps.semantic.outputs.new-release-published == 'true'
        run: gcloud auth configure-docker

      - name: Build and Push Container
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |-
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

      - name: Deploy to Cloud Run
        if: steps.semantic.outputs.new-release-published == 'true'
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.6.0
        with:
          service: ${{ env.SERVICE }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
          region: ${{ env.REGION }}

      - name: Show Output
        if: steps.semantic.outputs.new-release-published == 'true'
        run: echo ${{ steps.deploy.outputs.url }}

      - name: Create Sentry release
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: v${{ steps.semantic.outputs.release-version }}
